name: ComputeAorta/ci-github-mrexport
on:
  push:
# main only?
#    branches:
#      - main
  workflow_dispatch:
concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true
#env:
#  STORAGE_USER: "${{ secrets.STORAGE_USER }}"
#  STORAGE_PASS: "${{ secrets.STORAGE_PASS }}"
#  ZULIP_TOKEN: "${{ secrets.ZULIP_TOKEN }}"
#  ComputeAortaCL_TOKEN: "${{ secrets.ComputeAortaCL_TOKEN }}"
#  ComputeAortaCLVK_TOKEN: "${{ secrets.ComputeAortaCLVK_TOKEN }}"
#  SCCACHE_REDIS: redis://buildcache01.office.codeplay.com
#  OLD_CA_GITLAB_API_TOKEN: "${{ secrets.OLD_CA_GITLAB_API_TOKEN }}"
#  OLD_CA_GIT_WRITE_TOKEN: "${{ secrets.OLD_CA_GIT_WRITE_TOKEN }}"
#  CLICOLOR_FORCE: '1'
#  GTEST_COLOR: 'yes'
#  CA_GIT_WRITE_TOKEN: "${{ secrets.CA_GIT_WRITE_TOKEN }}"
#  CA_GITLAB_API_TOKEN: "${{ secrets.CA_GITLAB_API_TOKEN }}"
#  LLVM_GIT_WRITE_TOKEN: zrHPYsf6BVupQeYySmnH
jobs:
  mr-ubuntu-clang-x86-llvm-previous-cl3-0-offline:
    runs-on: ubuntu-22.04
#    container:
#      image: "$CI_REGISTRY/computeaorta/ci/ubuntu:20.04-x86_64"
    if: ${{ github.event_name }} == "merge_request_event" && $RUN_BUILD_TEST == "1"
    timeout-minutes: 60
    env:
#      GIT_STRATEGY: clone
#      OCK_BRANCH: main
#      GITHUB_USER: codeplaysoftware
#      LLVM_LATEST: release_180
#      LLVM_PREVIOUS: release_170
#      RUN_DOC: '1'
      RUN_BUILD_TEST: '1'
#      MR_TARGET_BRANCH: main
      BuildType: ReleaseAssert
#      Arch: x86
#      LLVMBranch: "$LLVM_PREVIOUS"
#      Target: check-ock
#      Images: 'OFF'
      CommandBuffer: 'ON'
#      USM: 'ON'
      FP16: 'OFF'
      Compiler: llvm_install/bin/clang
# CPPCompiler is new
      CPPCompiler: llvm_install/bin/clang++
    steps:
    - run: ls -al
    - name: Checkout repo
      uses: actions/checkout@v4.1.0
#      with:
#        path: code
#        fetch-depth: 50
#        lfs: true
#    - run: cd code
    - run: ls -al
#    - run: echo cloning "https://github.com/codeplaysoftware/oneapi-construction-kit.git"
#    - run: git clone https://github.com/codeplaysoftware/oneapi-construction-kit.git -b $MR_TARGET_BRANCH
#    - run: cd oneapi-construction-kit
#    - run: echo adding "https://github.com/$GITHUB_USER/oneapi-construction-kit.git" as a remote
#    - run: git remote add github-user https://github.com/$GITHUB_USER/oneapi-construction-kit.git
#    - run: git config user.name "${{ github.actor }}"
#    - run: git config user.email "${{ github.actor }}"
#    - run: git fetch github-user
#    - run: echo merging $OCK_BRANCH into $MR_TARGET_BRANCH
#    - run: git merge github-user/"$OCK_BRANCH"
#    - run: git log -1
#    - run: cp -r ../scripts/*.* scripts
    # installs tools, ninja, installs llvm and sets up sccache
    - name: setup-ubuntu
      uses:  ./.github/actions/setup_ubuntu_build
      with:
        llvm_version: 17
        llvm_build_type: RelAssert
    - run: ls -al
    - run: ls -alR llvm_install
    - run: echo pull and extract llvm_tools and llvm

    - run: echo python -u scripts/build.py -GNinja --verbose --clean --build_type $BuildType --arch $Arch --compiler $Compiler --artefact_name $LLVMBranch --target $Target -DCA_CL_ENABLE_ICD_LOADER=ON -DCA_ENABLE_HOST_IMAGE_SUPPORT=$Images -DCA_HOST_ENABLE_BUILTIN_KERNEL=ON -DCA_HOST_ENABLE_BUILTINS_EXTENSION=ON -DCA_HOST_ENABLE_FP16=$FP16 -DCA_ASSEMBLE_SPIRV_LL_LIT_TESTS_OFFLINE=OFF -DOCL_EXTENSION_cl_intel_unified_shared_memory=$USM -DOCL_EXTENSION_cl_khr_command_buffer=$CommandBuffer -DOCL_EXTENSION_cl_khr_command_buffer_mutable_dispatch=$CommandBuffer -DCA_USE_LINKER=gold

    - run: echo PWD && pwd
    - run: echo GITHUB_WORKSPACE $GITHUB_WORKSPACE
    - run: mkdir /tmp/alan

    - run: echo cmake -GNinja -DCA_CL_ENABLE_ICD_LOADER=ON -DCA_ENABLE_HOST_IMAGE_SUPPORT=OFF -DCA_HOST_ENABLE_BUILTIN_KERNEL=ON -DCA_HOST_ENABLE_BUILTINS_EXTENSION=ON -DCA_HOST_ENABLE_FP16=$FP16 -DCA_ASSEMBLE_SPIRV_LL_LIT_TESTS_OFFLINE=OFF -DOCL_EXTENSION_cl_intel_unified_shared_memory=ON -DOCL_EXTENSION_cl_khr_command_buffer=$CommandBuffer -DOCL_EXTENSION_cl_khr_command_buffer_mutable_dispatch=$CommandBuffer -DCA_USE_LINKER=gold -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/build/install -DCA_LLVM_INSTALL_DIR=$GITHUB_WORKSPACE/build/llvm -DCMAKE_BUILD_TYPE=$BuildType -DCMAKE_C_COMPILER=$GITHUB_WORKSPACE/$Compiler -DCMAKE_CXX_COMPILER=$GITHUB_WORKSPACE/$CPPCompiler -DCA_ENABLE_DEBUG_SUPPORT=ON -DCA_BUILTINS_TOOLS_DIR=$GITHUB_WORKSPACE/build/llvm/llvm_tools -DCA_BUILD_32_BITS=ON -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache "-DCA_GTEST_LAUNCHER=/usr/bin/python;-u;scripts/gtest-terse-runner.py" $GITHUB_WORKSPACE
    - run: cmake -DCMAKE_BINARY_DIR=/tmp/alan -GNinja -DCA_CL_ENABLE_ICD_LOADER=ON -DCA_ENABLE_HOST_IMAGE_SUPPORT=OFF -DCA_HOST_ENABLE_BUILTIN_KERNEL=ON -DCA_HOST_ENABLE_BUILTINS_EXTENSION=ON -DCA_HOST_ENABLE_FP16=$FP16 -DCA_ASSEMBLE_SPIRV_LL_LIT_TESTS_OFFLINE=OFF -DOCL_EXTENSION_cl_intel_unified_shared_memory=ON -DOCL_EXTENSION_cl_khr_command_buffer=$CommandBuffer -DOCL_EXTENSION_cl_khr_command_buffer_mutable_dispatch=$CommandBuffer -DCA_USE_LINKER=gold -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/build/install -DCA_LLVM_INSTALL_DIR=$GITHUB_WORKSPACE/build/llvm -DCMAKE_BUILD_TYPE=$BuildType -DCMAKE_C_COMPILER=$GITHUB_WORKSPACE/$Compiler -DCMAKE_CXX_COMPILER=$GITHUB_WORKSPACE/$CPPCompiler -DCA_ENABLE_DEBUG_SUPPORT=ON -DCA_BUILTINS_TOOLS_DIR=$GITHUB_WORKSPACE/build/llvm/llvm_tools -DCA_BUILD_32_BITS=ON -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache "-DCA_GTEST_LAUNCHER=/usr/bin/python;-u;scripts/gtest-terse-runner.py" $GITHUB_WORKSPACE

    - run: echo echo python -u scripts/build.py -GNinja --verbose --clean --build_type $BuildType --arch $Arch --compiler $Compiler --binary_dir build_offline --target check-ock --offline_only --external_clc ${{ github.workspace }}/oneapi-construction-kit/build/bin/clc -DCA_CL_ENABLE_ICD_LOADER=ON -DCA_ENABLE_HOST_IMAGE_SUPPORT=$Images -DCA_HOST_ENABLE_FP16=$FP16 -DOCL_EXTENSION_cl_khr_command_buffer=$CommandBuffer -DOCL_EXTENSION_cl_khr_command_buffer_mutable_dispatch=$CommandBuffer -DCA_USE_LINKER=gold

#     # 'artifacts.junit' was not transformed because there is no suitable equivalent in GitHub Actions
