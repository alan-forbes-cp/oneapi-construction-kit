name: ComputeAorta/ci-github-mrexport
on:
  workflow_dispatch:
  pull_request:
    paths:
    - source/**
    - clik/**
    - modules/**
    - examples/**
    - cmake/**
    - hal/**
    - .github/actions/do_build_ock/**
    - .github/actions/setup_ubuntu_build/**
    - CMakeLists.txt
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:

############### JOB   TEST-mr-ubuntu-gcc-x86_64-riscv-fp16-cl3-0-unitcl_vecz:

  TEST-mr-ubuntu-gcc-x86_64-riscv-fp16-cl3-0-unitcl_vecz:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4.1.0
#      with:
#        path: code
#    - run: cp -R code/.github .github
    - name: setup-ubuntu
      uses: ./.github/actions/setup_ubuntu_build
      with:
        llvm_version: '18'
        llvm_build_type: RelAssert
    - run: echo WORKSPACE is $GITHUB_WORKSPACE && echo PWD is `pwd` && ls -al
    - name: build ock
      uses: ./.github/actions/do_build_ock
      with:
#        path: $GITHUB_WORKSPACE/code
#        install_dir: $GITHUB_WORKSPACE/install
        build_targets: check-ock-UnitCL-group-vecz
        enable_api: cl
        mux_targets_enable: riscv
        mux_compilers_enable: riscv
        riscv_enabled: ON
        enable_rvv_scalable_vecz_check: ON
        enable_rvv_scalable_vp_vecz_check: ON
        use_linker: gold
        hal_description: RV64GCV_Zfh
        hal_refsi_soc: G1
        hal_refsi_thread_mode: WG
#        build_dir: $GITHUB_WORKSPACE/build
        debug_support: ON
#        gtest_launcher: "/usr/bin/python;-u;${{ github.workspace }}/code/scripts/gtest-terse-runner.py"
        gtest_launcher: "/usr/bin/python;-u;${{ github.workspace }}/scripts/gtest-terse-runner.py"

############### JOB   mr-ubuntu-gcc-x86_64-riscv-fp16-cl3-0-unitcl_vecz:

  mr-ubuntu-gcc-x86_64-riscv-fp16-cl3-0-unitcl_vecz:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    env:
      LLVM_LATEST: release_180
      LLVM_PREVIOUS: release_170
      Arch: x86_64
      Images: OFF
      CommandBuffer: ON
      USM: ON
      FP16: OFF
      LLVM_VERSION: $LLVM_LATEST
      MUX_COMPILERS_TO_ENABLE: riscv
      HAL_DESCRIPTION: RV64GCV_Zfh
      HAL_REFSI_SOC: G1
      HAL_REFSI_THREAD_MODE: WG
      TARGET: check-ock-UnitCL-group-vecz
      DISABLE_VECZ_CHECKS: OFF
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4.1.0
      with:
        path: code
    - run: cp -R code/.github .github
    - name: setup-ubuntu
      uses: ./.github/actions/setup_ubuntu_build
      with:
        llvm_version: '18'
        llvm_build_type: RelAssert
    - run: echo WORKSPACE is $GITHUB_WORKSPACE && echo PWD is `pwd` && ls -al
    - name: build ock
      uses: ./.github/actions/do_build_ock
      with:
        path: $GITHUB_WORKSPACE/code
        install_dir: $GITHUB_WORKSPACE/install
        llvm_install_dir: $GITHUB_WORKSPACE/llvm_install
        build_type: ReleaseAssert
        build_targets: $TARGET
        host_image: OFF
        enable_api: cl
        mux_targets_enable: riscv
        mux_compilers_enable: $MUX_COMPILERS_TO_ENABLE
        riscv_enabled: ON
        disable_unitcl_vecz_checks: $DISABLE_VECZ_CHECKS
        enable_rvv_scalable_vecz_check: ON
        enable_rvv_scalable_vp_vecz_check: ON
        command_buffer: ON
        use_linker: gold
        hal_description: $HAL_DESCRIPTION
        hal_refsi_soc: $HAL_REFSI_SOC
        hal_refsi_thread_mode: $HAL_REFSI_THREAD_MODE
        build_dir: $GITHUB_WORKSPACE/build
        debug_support: ON
        gtest_launcher: "/usr/bin/python;-u;${{ github.workspace }}/code/scripts/gtest-terse-runner.py"

############### JOB   TEST-mr-ubuntu-gcc-x86_64-riscv-fp16-cl3-0:

  TEST-mr-ubuntu-gcc-x86_64-riscv-fp16-cl3-0:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4.1.0
      with:
        path: code
    - run: cp -R code/.github .github
    - name: setup-ubuntu
      uses: ./.github/actions/setup_ubuntu_build
      with:
        llvm_version: '18'
        llvm_build_type: RelAssert
    - run: echo WORKSPACE is $GITHUB_WORKSPACE && echo PWD is `pwd` && ls -al
    - name: build ock
      uses: ./.github/actions/do_build_ock
      with:
        path: $GITHUB_WORKSPACE/code
        install_dir: $GITHUB_WORKSPACE/install
        llvm_install_dir: $GITHUB_WORKSPACE/llvm_install
        build_targets: check-ock
        enable_api: cl
        mux_targets_enable: riscv
        mux_compilers_enable: riscv
        riscv_enabled: ON
        disable_unitcl_vecz_checks: ON
        enable_rvv_scalable_vecz_check: ON
        enable_rvv_scalable_vp_vecz_check: ON
        use_linker: gold
        hal_description: RV64GCV_Zfh
        hal_refsi_soc: G1
        hal_refsi_thread_mode: WG
        build_dir: $GITHUB_WORKSPACE/build
        debug_support: ON
        gtest_launcher: "/usr/bin/python;-u;${{ github.workspace }}/code/scripts/gtest-terse-runner.py"

############### JOB   mr-ubuntu-gcc-x86_64-riscv-fp16-cl3-0:

  mr-ubuntu-gcc-x86_64-riscv-fp16-cl3-0:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    env:
      LLVM_LATEST: release_180
      LLVM_PREVIOUS: release_170
      Arch: x86_64
      Images: OFF
      CommandBuffer: ON
      USM: ON
      FP16: OFF
      LLVM_VERSION: $LLVM_LATEST
      MUX_COMPILERS_TO_ENABLE: riscv
      HAL_DESCRIPTION: RV64GCV_Zfh
      HAL_REFSI_SOC: G1
      HAL_REFSI_THREAD_MODE: WG
      TARGET: check-ock
      DISABLE_VECZ_CHECKS: ON
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4.1.0
      with:
        path: code
    - run: cp -R code/.github .github
    - name: setup-ubuntu
      uses: ./.github/actions/setup_ubuntu_build
      with:
        llvm_version: '18'
        llvm_build_type: RelAssert
    - run: echo WORKSPACE is $GITHUB_WORKSPACE && echo PWD is `pwd` && ls -al
    - name: build ock
      uses: ./.github/actions/do_build_ock
      with:
        path: $GITHUB_WORKSPACE/code
        install_dir: $GITHUB_WORKSPACE/install
        llvm_install_dir: $GITHUB_WORKSPACE/llvm_install
        build_type: ReleaseAssert
        build_targets: $TARGET
        host_image: OFF
        enable_api: cl
        mux_targets_enable: riscv
        mux_compilers_enable: $MUX_COMPILERS_TO_ENABLE
        riscv_enabled: ON
        disable_unitcl_vecz_checks: $DISABLE_VECZ_CHECKS
        enable_rvv_scalable_vecz_check: ON
        enable_rvv_scalable_vp_vecz_check: ON
        command_buffer: ON
        use_linker: gold
        hal_description: $HAL_DESCRIPTION
        hal_refsi_soc: $HAL_REFSI_SOC
        hal_refsi_thread_mode: $HAL_REFSI_THREAD_MODE
        build_dir: $GITHUB_WORKSPACE/build
        debug_support: ON
        gtest_launcher: "/usr/bin/python;-u;${{ github.workspace }}/code/scripts/gtest-terse-runner.py"

############### JOB   TEST-mr-ubuntu-gcc-x86_64-cpu:

  TEST-mr-ubuntu-gcc-x86_64-cpu:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    env:
      ONEAPI_CON_KIT_DIR: ${{ github.workspace }}/code
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4.1.0
      with:
        path: code
    - run: cp -R code/.github .github
    - name: setup-ubuntu
      uses: ./.github/actions/setup_ubuntu_build
      with:
        llvm_version: '18'
        llvm_build_type: RelAssert
    - run: echo WORKSPACE is $GITHUB_WORKSPACE && echo PWD is `pwd` && ls -al
    - run: pip install cookiecutter
    - run: python -u code/scripts/create_target.py $PWD/code $PWD/code/scripts/new_target_templates/cpu_x86.json --external-dir $GITHUB_WORKSPACE/cpu_hal_ock
    - run: ls -l $GITHUB_WORKSPACE/cpu_hal_ock
    - name: build ock
      uses: ./.github/actions/do_build_ock
      with:
        path: $GITHUB_WORKSPACE/cpu_hal_ock
        install_dir: $GITHUB_WORKSPACE/install
        llvm_install_dir: $GITHUB_WORKSPACE/llvm_install
        build_targets: check-ock-UnitCL
        enable_api: cl
        mux_targets_enable: cpu
        use_linker: gold
        build_dir: $GITHUB_WORKSPACE/build
        debug_support: ON
        extra_flags: -DCA_EXTERNAL_ONEAPI_CON_KIT_DIR=$ONEAPI_CON_KIT_DIR -DCA_EXTERNAL_CPU_HAL_DIR=$ONEAPI_CON_KIT_DIR/clik/external/hal_cpu -DCA_CPU_ENABLED=ON
        gtest_launcher: "/usr/bin/python;-u;${{ github.workspace }}/code/scripts/gtest-terse-runner.py"

############### JOB   mr-ubuntu-gcc-x86_64-cpu:

  mr-ubuntu-gcc-x86_64-cpu:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    env:
      LLVM_LATEST: release_180
      LLVM_PREVIOUS: release_170
      Arch: x86_64
      Images: OFF
      CommandBuffer: ON
      USM: ON
      FP16: OFF
      TARGET: check-ock-UnitCL
      ONEAPI_CON_KIT_DIR: ${{ github.workspace }}/code
      LLVM_VERSION: $LLVM_LATEST
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4.1.0
      with:
        path: code
    - run: cp -R code/.github .github
    - name: setup-ubuntu
      uses: ./.github/actions/setup_ubuntu_build
      with:
        llvm_version: '18'
        llvm_build_type: RelAssert
    - run: echo WORKSPACE is $GITHUB_WORKSPACE && echo PWD is `pwd` && ls -al
    - run: pip install cookiecutter
    - run: python -u code/scripts/create_target.py $PWD/code $PWD/code/scripts/new_target_templates/cpu_x86.json --external-dir $GITHUB_WORKSPACE/cpu_hal_ock
    - run: ls -l $GITHUB_WORKSPACE/cpu_hal_ock
    - name: build ock
      uses: ./.github/actions/do_build_ock
      with:
        path: $GITHUB_WORKSPACE/cpu_hal_ock
        install_dir: $GITHUB_WORKSPACE/install
        llvm_install_dir: $GITHUB_WORKSPACE/llvm_install
        build_type: ReleaseAssert
        build_targets: $TARGET
        host_image: OFF
        enable_api: cl
        mux_targets_enable: cpu
        use_linker: gold
        offline_kernel_tests: ON
        build_dir: $GITHUB_WORKSPACE/build
        debug_support: ON
        extra_flags: -DCA_EXTERNAL_ONEAPI_CON_KIT_DIR=$ONEAPI_CON_KIT_DIR -DCA_EXTERNAL_CPU_HAL_DIR=$ONEAPI_CON_KIT_DIR/clik/external/hal_cpu -DCA_CPU_ENABLED=ON
        gtest_launcher: "/usr/bin/python;-u;${{ github.workspace }}/code/scripts/gtest-terse-runner.py"

############### JOB   TEST-mr-ubuntu-gcc-x86-llvm-previous-cl3-0-release:

  TEST-mr-ubuntu-gcc-x86-llvm-previous-cl3-0-release:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4.1.0
      with:
        path: code
    - run: cp -R code/.github .github
    - name: setup-ubuntu
      uses: ./.github/actions/setup_ubuntu_build
      with:
        llvm_version: '17'
        llvm_build_type: Release
        arch: x86
    - run: echo WORKSPACE is $GITHUB_WORKSPACE && echo PWD is `pwd` && ls -al
    - name: build ock
      uses: ./.github/actions/do_build_ock
      with:
        path: $GITHUB_WORKSPACE/code
        install_dir: $GITHUB_WORKSPACE/install
        llvm_install_dir: $GITHUB_WORKSPACE/llvm_install
        build_type: Release
        enable_api: cl
        arch: x86
        build_targets: check-ock
        debug_support: ON
        use_linker: gold
        build_dir: $GITHUB_WORKSPACE/build
        gtest_launcher: "/usr/bin/python;-u;${{ github.workspace }}/code/scripts/gtest-terse-runner.py"

############### JOB   mr-ubuntu-gcc-x86-llvm-previous-cl3-0-release:

  mr-ubuntu-gcc-x86-llvm-previous-cl3-0-release:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    env:
      LLVM_LATEST: release_180
      LLVM_PREVIOUS: release_170
      LLVM_VERSION: $LLVM_PREVIOUS
      Arch: x86
      TARGET: check-ock
      Images: OFF
      CommandBuffer: ON
      USM: ON
      FP16: OFF
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4.1.0
      with:
        path: code
    - run: cp -R code/.github .github
    - name: setup-ubuntu
      uses: ./.github/actions/setup_ubuntu_build
      with:
        llvm_version: '17'
        llvm_build_type: Release
        arch: x86
    - run: echo WORKSPACE is $GITHUB_WORKSPACE && echo PWD is `pwd` && ls -al
    - name: build ock
      uses: ./.github/actions/do_build_ock
      with:
        path: $GITHUB_WORKSPACE/code
        install_dir: $GITHUB_WORKSPACE/install
        llvm_install_dir: $GITHUB_WORKSPACE/llvm_install
        build_type: Release
        enable_api: cl
        arch: $Arch
        build_targets: $TARGET
        host_image: $Images
        debug_support: ON
        host_enable_builtins: ON
        host_fp16: $FP16
        assemble_spirv_ll_lit_test_offline: OFF
        usm: $USM
        command_buffer: $CommandBuffer
        use_linker: gold
        build_dir: $GITHUB_WORKSPACE/build
        gtest_launcher: "/usr/bin/python;-u;${{ github.workspace }}/code/scripts/gtest-terse-runner.py"

############### JOB   TEST-mr-ubuntu-clang-x86-llvm-latest-cl3-0:

  TEST-mr-ubuntu-clang-x86-llvm-latest-cl3-0:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4.1.0
      with:
        path: code
    - run: cp -R code/.github .github
    - name: setup-ubuntu
      uses: ./.github/actions/setup_ubuntu_build
      with:
        llvm_version: '18'
        llvm_build_type: RelAssert
        arch: x86
    - run: echo WORKSPACE is $GITHUB_WORKSPACE && echo PWD is `pwd` && ls -al
    - name: build ock
      uses: ./.github/actions/do_build_ock
      with:
        path: $GITHUB_WORKSPACE/code
        install_dir: $GITHUB_WORKSPACE/install
        llvm_install_dir: $GITHUB_WORKSPACE/llvm_install
        arch: x86
        c_compiler: $GITHUB_WORKSPACE/llvm_install/bin/clang
        cxx_compiler: $GITHUB_WORKSPACE/llvm_install/bin/clang++
        build_targets: check-ock
        use_linker: gold
        build_dir: $GITHUB_WORKSPACE/build
        debug_support: ON
        gtest_launcher: "/usr/bin/python;-u;${{ github.workspace }}/code/scripts/gtest-terse-runner.py"

############### JOB   mr-ubuntu-clang-x86-llvm-latest-cl3-0:

  mr-ubuntu-clang-x86-llvm-latest-cl3-0:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    env:
      LLVM_LATEST: release_180
      LLVM_PREVIOUS: release_170
      Arch: x86
      TARGET: check-ock
      Images: OFF
      CommandBuffer: ON
      USM: ON
      FP16: OFF
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4.1.0
      with:
        path: code
    - run: cp -R code/.github .github
    - name: setup-ubuntu
      uses: ./.github/actions/setup_ubuntu_build
      with:
        llvm_version: '18'
        llvm_build_type: RelAssert
        arch: x86
    - run: echo WORKSPACE is $GITHUB_WORKSPACE && echo PWD is `pwd` && ls -al
    - name: build ock
      uses: ./.github/actions/do_build_ock
      with:
        path: $GITHUB_WORKSPACE/code
        install_dir: $GITHUB_WORKSPACE/install
        llvm_install_dir: $GITHUB_WORKSPACE/llvm_install
        build_type: ReleaseAssert
        arch: $Arch
        c_compiler: $GITHUB_WORKSPACE/llvm_install/bin/clang
        cxx_compiler: $GITHUB_WORKSPACE/llvm_install/bin/clang++
        build_targets: $TARGET
        host_image: $Images
        host_enable_builtins: ON
        host_fp16: $FP16
        assemble_spirv_ll_lit_test_offline: OFF
        usm: $USM
        command_buffer: $CommandBuffer
        use_linker: gold
        build_dir: $GITHUB_WORKSPACE/build
        debug_support: ON
        gtest_launcher: "/usr/bin/python;-u;${{ github.workspace }}/code/scripts/gtest-terse-runner.py"

############### JOB   mr-ubuntu-clang-x86-llvm-previous-cl3-0-offline:

  mr-ubuntu-clang-x86-llvm-previous-cl3-0-offline:
    runs-on: ubuntu-22.04
    timeout-minutes: 90  # allow extra time for this job
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4.1.0
    - name: setup-ubuntu
      uses: ./.github/actions/setup_ubuntu_build
      with:
        llvm_version: '18' # no 17 in source repo??
        llvm_build_type: RelAssert
        arch: x86
    - run: echo WORKSPACE is $GITHUB_WORKSPACE && echo PWD is `pwd` && ls -al
    - name: build ock one
      uses: ./.github/actions/do_build_ock
      with:
        arch: x86
        c_compiler: $GITHUB_WORKSPACE/llvm_install/bin/clang
        cxx_compiler: $GITHUB_WORKSPACE/llvm_install/bin/clang++
        build_targets: check-ock
        builtin_kernel: ON
        use_linker: gold
        debug_support: ON
    - name: build ock two
      uses: ./.github/actions/do_build_ock
      with:
        arch: x86
        c_compiler: $GITHUB_WORKSPACE/llvm_install/bin/clang
        cxx_compiler: $GITHUB_WORKSPACE/llvm_install/bin/clang++
        build_targets: check-ock
        runtime_compiler_enabled: OFF
        assemble_spirv_ll_lit_test_offline: ON
        external_clc: ${GITHUB_WORKSPACE}/build/bin/clc
        use_linker: gold
        debug_support: ON
        install_dir: $GITHUB_WORKSPACE/install_offline   # avoid default dir used in previous step
        build_dir: $GITHUB_WORKSPACE/build_offline   # avoid default dir used in previous step
