name: run planned tests for llvm 19
on:
  pull_request:
    paths:
      - '.github/workflows/planned_testing_caller_19.yml'
  schedule:
    # Run Sun, Tues, Thurs Sat at 7pm
    - cron: '0 19 * * 0,2,4,6'

permissions:
  packages: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  L19_:
    if: github.repository == 'uxlfoundation/oneapi-construction-kit' || github.event_name != 'schedule'
    uses: ./.github/workflows/planned_testing_caller.yml
    with:
      llvm_version: '19'
      llvm_branch: 'release/19.x'
      use_llvm_github_cache: true
      save_cache:  ${{ github.event_name == 'schedule' }}
      # We can set ock, test_sycl_cts etc here optionally if this is used as a pull request.
      # Any with parameters below this is intended for local testing and should not be merged.
      # target_list: '[ "host_x86_64_linux" ]'
      # ock: true
      # native_cpu: true
      # test_tornado: true
      # test_remote_hal: true
      # test_sycl_cts: true
      # test_sycl_e2e: true
      # test_opencl_cts: true
      # test_sanitizers: true
      # run_internal: true
      # run_external: true
      # build_llvm: true

      # # These can be set to a workflow run-id to download from a previous workflow. This can be seen from
      # # the action run of a job or workflow
      # # e.g. https://github.com/uxlfoundation/oneapi-construction-kit/actions/runs/<run-id>/.....
      # download_ock_artefact: host_x86_64_linux=14225268091;host_aarch64_linux=14225268091;host_riscv64_linux=14225268091
      # download_dpcpp_artefact: host_x86_64_linux=14225268091;host_aarch64_linux=14225268091;host_riscv64_linux=14225268091
      # download_sycl_cts_artefact: host_x86_64_linux=14225268091;host_aarch64_linux=14225268091;host_riscv64_linux=14225268091

  # This cleans up any caches which may have been created when running external tests
  clean_caches:
    needs: [ L19_ ]
    if: github.repository == 'uxlfoundation/oneapi-construction-kit' && github.event_name == 'schedule' && always()
    runs-on: ubuntu-latest
    permissions:
      actions: write # for gh cache delete
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          sparse-checkout: .github
      - name: Cache clean
        uses: ./.github/actions/clean_cache
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          cache_prefixes: "ccache-dpcpp-build-host_x86_64_linux ccache-dpcpp-build-host_aarch64_linux ccache-dpcpp-build-host_riscv64_linux"
