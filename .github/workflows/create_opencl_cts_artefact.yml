# Workflow for creating and caching OpenCL-CTS artefact

name: Create an cache OpenCL-CTS artefact

on:
  # ALAN TODO: restore workflow_dispatch - and usage of all inputs
  workflow_dispatch:
  #pull_request:
    inputs:
      llvm_version:
        required: false
        type: string
        description: 'llvm major version (e.g 19,20, main) - to be used for llvm specific fails'
        default: 19
      llvm_branch:
        required: false
        type: string
        description: 'The actual llvm branch to check out e.g. release/19.x'
        default: 'release/19.x'
      download_ock_artefact:
        # ALAN TODO: is this needed here?
        required: false
        type: string
        description: 'download ock artefact rather than building, of form <target>=id;<target2=id2>.'
        default: ''
      llvm_source:
        required: false
        type: string
        description: 'method of sourcing llvm (install, cache or run-id)'
        default: 'cache'
      use_llvm_github_cache:
        required: false
        type: boolean
        description: 'Use a cache for any llvm artifact fetching and update if not found'
        default: true
      header_ref:
        required: false
        type: string
        description: 'Git checkout ref for OpenCL Headers repo'
        default: 'v2025.06.13'
      icd_ref:
        required: false
        type: string
        description: 'Git checkout ref for OpenCL ICD Loader repo'
        default: 'v2024.10.24'
      opencl_cts_ref:
        required: false
        type: string
        description: 'Git checkout ref for OpenCL-CTS repo'
        # Note: at time of writing:
        #    v2025-01-22-00 is the latest release - but gives build errors,
        #    v2025-04-21-00 is the latest prerelease - and builds OK
        default: 'v2025-04-21-00'
     
permissions:
  packages: read

jobs:

  build_llvm_artefact:
    name: Create llvm artefact
    uses: ./.github/workflows/create_llvm_artefacts.yml
    secrets: inherit
    with:
      llvm_branch: ${{ inputs.llvm_branch || 'release/19.x' }}
      llvm_version: ${{ inputs.llvm_version || '19' }}
      use_github_cache: ${{ inputs.use_llvm_github_cache || true }}
      target_list: '[ "host_x86_64_linux" ]'

  create_ock_artefact:
    name: Create ock artefact
    needs: [ build_llvm_artefact ]
    runs-on: 'ubuntu-22.04'
    container:
      image: 'ghcr.io/uxlfoundation/ock_ubuntu_22.04-x86-64:latest'
      volumes:
        - ${{github.workspace}}:${{github.workspace}}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - uses: ./.github/actions/setup_gh
        with:
          os: 'ubuntu'
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: build ock artefact
        uses: ./.github/actions/do_build_ock_artefact
        with:
          target: 'host_x86_64_linux'
          llvm_version: ${{ inputs.llvm_version || '19' }}
          download_ock_artefact: ${{ inputs.download_ock_artefact || '' }}
          llvm_source: ${{ inputs.llvm_source || 'cache' }}

  build_icd:
    name: Create ICD artefact
    runs-on: 'ubuntu-22.04'
    container:
      image: 'ghcr.io/uxlfoundation/ock_ubuntu_22.04-x86-64:latest'
      volumes:
        - ${{github.workspace}}:${{github.workspace}}
    steps:
      - name: clone ock platform
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            platform
            .github
      - name : build and upload icd
        uses: ./.github/actions/do_build_icd
        with:
          target: 'host_x86_64_linux'
          header_ref: ${{ inputs.header_ref || 'v2025.06.13' }}
          icd_ref: ${{ inputs.icd_ref || 'v2024.10.24 ' }}

  build_opencl_cts_artefact:
    name: Create OpenCL-CTS artefact
    needs: [ build_icd, create_ock_artefact ]
    runs-on: 'ubuntu-22.04'
    container:
      image: 'ghcr.io/uxlfoundation/ock_ubuntu_22.04-x86-64:latest'
      volumes:
        - ${{github.workspace}}:${{github.workspace}}
    steps:
      - name: clone ock
        uses: actions/checkout@v4
        with:
          # scripts: for run_cities.py
          # source: for CTS filter.csv files
          # platform: for toolchain files
          sparse-checkout: |
            scripts
            source
            platform
            .github
      - name : build and upload opencl_cts artefact
        uses: ./.github/actions/do_build_opencl_cts
        with:
          target: 'host_x86_64_linux'
          cache_update: true
          opencl_cts_ref: ${{ inputs.opencl_cts_ref || 'v2025-04-21-00' }}
