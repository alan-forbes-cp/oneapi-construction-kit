name: build opencl cts artefact
description: build opencl cts artefact

inputs:
  target:
    description: 'target architecture'

runs:
  using: "composite"
  steps:
    - name: calc vars
      id: calc_vars
      uses: ./.github/actions/calc_vars
      with:
        target: ${{ inputs.target }}

    - name: Install Ninja
      uses: llvm/actions/install-ninja@a1ea791b03c8e61f53a0e66f2f73db283aa0f01e # main branch
    
    #- name: download icd artifact
    #  uses: actions/download-artifact@v4
    #  with:
    #    name: icd_${{inputs.target}}
    #    path: install_icd

    #- name: download header artifact
    #  uses: actions/download-artifact@v4
    #  with:
    #    name: header_${{inputs.target}}
    #    path: install_headers

    #- name: checkout test suite
    #  uses: actions/checkout@v4
    #  with:
    #    repository: KhronosGroup/OpenCL-CTS
    #    path: OpenCL-CTS
    #    # v2024-01-09-04 is used with the Gitlab artefact (at time of writing)
    #    # v2025-01-22-00 is the latest release
    #    # v2025-04-21-00 is the latest prerelease
    #    # ref: v2025-01-22-00 - fails
    #    ref: v2025-04-21-00

    - name: download llvm artifact
      uses: actions/download-artifact@v4
      with:
        name: llvm-ubuntu-22.04-x86_64-19-RelAssert
        path: opencl_cts_build/build/llvm_install
        needs_tar: 'true'
        run_id: ${{ github.run_id }}

    - name: build opencl cts
      shell: bash
      run: |
        # do build
        set -x
        echo BEFORE
        ls -l
        cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/opencl_cts_build/build/install -DCMAKE_PREFIX_PATH=$GITHUB_WORKSPACE/opencl_cts_build/build/llvm_install -DCA_CL_CTS_LLVM_VERSION=19.1.7 $GITHUB_WORKSPACE/opencl_cts_build
        echo DURING
        ls -l
        cmake --build $GITHUB_WORKSPACE/opencl_cts_build/build --target install --config Release
        echo AFTER
        ls -l

    #- name: build opencl cts
    #  shell: bash
    #  env:
    #    CMAKE_TOOLCHAIN: "${{ steps.calc_vars.outputs.cmake_toolchain }}"
    #  run: |
    #    echo CMAKE_TOOLCHAIN is: $CMAKE_TOOLCHAIN
    #    # apply patches
    #    git -C OpenCL-CTS log -1
    #    for patch in $GITHUB_WORKSPACE/scripts/testing/patches/OpenCL-CTS-*.patch
    #    do
    #      if test -f "$patch"
    #      then
    #        echo "Applying ${patch##*/}"
    #        git -C OpenCL-CTS apply "$patch"
    #      fi
    #    done
    #    # do build
    #    set -x
    #    echo BEFORE
    #    ls -l
    #    cmake -G Ninja $CMAKE_TOOLCHAIN $GITHUB_WORKSPACE/OpenCL-CTS \
    #      -DCMAKE_BUILD_TYPE=Release \
    #      -DOPENCL_LIBRARIES=OpenCL \
    #      -DCL_INCLUDE_DIR=$GITHUB_WORKSPACE/install_headers/include \
    #      -DCL_LIB_DIR=$GITHUB_WORKSPACE/install_icd/lib
    #    ninja -v
    #    echo AFTER
    #    ls -l

    #- name: upload opencl cts artifacts
    #  uses: actions/upload-artifact@v4
    #  with:
    #    name: opencl_cts_${{inputs.target}}_artefact
    #    path: |
    #      test_conformance
    #      !test_conformance/**/.*
    #      !test_conformance/**/CMakeCache.txt
    #      !test_conformance/**/CMakeFiles
    #      !test_conformance/**/CMakeFiles/**
    #      !test_conformance/**/*.cmake
    #      !test_conformance/**/*.ninja
    #      !test_conformance/test_common
    #      !test_conformance/test_common/**
    #    retention-days: 7
