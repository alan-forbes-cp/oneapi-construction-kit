name: run opencl cts
description: run opencl cts

# This action is not standalone and assumes it has been run after the build_opencl_cts action.

inputs:
  target:
    description: 'target architecture'
  test_type:
    description: 'quick | full'
    default: "quick"

runs:
  using: "composite"
  steps:
    - name: Download ock artefact
      uses: actions/download-artifact@v4
      with:
        name: ock_${{inputs.target}}
        path: install_ock

    - name: Run opencl cts
      shell: bash
      env:
        CTS_CSV_FILE: opencl_conformance_tests_${{inputs.test_type}}.csv
        # TODO: expand filter for other targets
        CTS_FILTER: cts-3.0-online-ignore-linux-host.csv
        CTS_TIMEOUT: 18:00:00 # OK for github?
      run: |
        echo "Running OpenCL CTS tests with CTS file $CTS_CSV_FILE with filter $CTS_FILTER"
        export QEMU_SETTING=""
        if [[ "${{inputs.target}}" =~ .*riscv64.* ]] ; then
          QEMU_SETTING="--prepend-path '/usr/bin/qemu-riscv64 -L /usr/riscv64-linux-gnu'"
        fi
        echo QEMU SETTING: $QEMU_SETTING
        set -x
        echo > expect_fail.csv
        # $CTS_FILTER ignores certain test, so is treated differently to temporary fails.
        [ -f .github/opencl_cts/expect_fail_all.csv ] && cat .github/opencl_cts/expect_fail_all.csv >> expect_fail.csv
        [ -f .github/opencl_cts/expect_fail_${{ inputs.target }}.csv ] && cat .github/opencl_cts/expect_fail_${{ inputs.target }}.csv >> expect_fail.csv
        cat expect_fail.csv "$GITHUB_WORKSPACE/source/cl/scripts/$CTS_FILTER" > disable.csv 
        # Note: use 'eval' built-in to handle quoting/escaping/splitting reqs
        RUN_CITIES="python3 -u $GITHUB_WORKSPACE/scripts/testing/run_cities.py -v \
          --color=always --timeout $CTS_TIMEOUT \
          $QEMU_SETTING \
          -b $GITHUB_WORKSPACE/test_conformance \
          -L $GITHUB_WORKSPACE/install_icd/lib \
          -e CLC_EXECUTABLE=$GITHUB_WORKSPACE/install_ock/bin/clc \
          -e OCL_ICD_FILENAMES=$GITHUB_WORKSPACE/install_ock/lib/libCL.so \
          -e CL_PLATFORM_INDEX=0 \
          -s $GITHUB_WORKSPACE/test_conformance/$CTS_CSV_FILE \
          -i disable.csv"
        eval $RUN_CITIES

    - name: Run expected failed opencl cts
      shell: bash
      env:
        CTS_TIMEOUT: 18:00:00
      run: |
        echo "Running OpenCL CTS tests with CTS file $CTS_CSV_FILE with filter $CTS_FILTER"
        set -x
        RUN_CITIES="python3 -u $GITHUB_WORKSPACE/scripts/testing/run_cities.py -v \
          --color=always --timeout $CTS_TIMEOUT \
          $QEMU_SETTING \
          -b $GITHUB_WORKSPACE/test_conformance \
          -L $GITHUB_WORKSPACE/install_icd/lib \
          -e CLC_EXECUTABLE=$GITHUB_WORKSPACE/install_ock/bin/clc \
          -e OCL_ICD_FILENAMES=$GITHUB_WORKSPACE/install_ock/lib/libCL.so \
          -e CL_PLATFORM_INDEX=0 \
          -s expect_fail.csv"
        eval $RUN_CITIES || echo failed as expected
