name: download artifact
description: Download an artifact, either through the action or using gh, depending which workflow it came from.

inputs:
  name:
    description: 'name of artifact to download'
    type: string
    required: true
  path:
    description: 'path to download to - currently must be a directory if needs_tar is true'
    type: string
    required: true
  needs_tar:
    description: 'The archive is tarred so we need to untar it after downloading it'
    type: boolean
    default: false
  tar_name:
    description: 'Specify name of tar file'  # set below to ${{ inputs.name }}.tar if not given
    type: string
    default: ''
  delete_tar:
    description: 'dictates whether we delete temp tar file after download'
    type: boolean
    default: true
  token:
    description: 'gh token for downloading artifacts - only needed for gh'
    default: 'TOKEN_NOT_SET'
  run_id:
    description: 'The run_id for the workflow the artifact came from'
    default: 'RUN_ID_UNKNOWN'

runs:
  using: "composite"
  steps:
    - name: set tar name
      id: set-tar-name
      shell: bash
      if: inputs.needs_tar == 'true'
      run: |
        echo Set tar file name ...
        if [ -z "${{ inputs.tar_name }}" ] ; then
          echo "TAR_NAME=${{ inputs.name }}.tar" >> $GITHUB_OUTPUT
        else
          echo "TAR_NAME=${{ inputs.tar_name }}" >> $GITHUB_OUTPUT
        fi

    # The normal case is to use the github action
    - name: download using download_artifact
      if: inputs.run_id == github.run_id
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.name }}
        path: ${{ inputs.needs_tar == 'true' && github.workspace || inputs.path }}

    # The run_id is not from this workflow, we need to use gh
    - name: download using gh run download
      if: inputs.run_id != github.run_id
      shell: bash
      run: |
        git config --global --add safe.directory $PWD
        GH_TOKEN=${{ inputs.token }} gh run download ${{ inputs.run_id }} -n ${{ inputs.name }} -D ${{ inputs.needs_tar == 'true' && github.workspace || inputs.path }}

    - name: untar artefact
      if: inputs.needs_tar == 'true'
      shell: bash
      run: |
        # Everything goes under the new path
        mkdir -p ${{ inputs.path }}
        echo Extract tar file ...
        set -x
        tar xf ${{ steps.set-tar-name.outputs.TAR_NAME }} -C ${{ inputs.path }}

    - name: delete tar file
      shell: bash
      if: inputs.needs_tar == 'true' && inputs.delete_tar == 'true'
      run: |
        echo Delete tar file ...
        set -x
        rm -rf ${{ steps.set-tar-name.outputs.TAR_NAME }}
