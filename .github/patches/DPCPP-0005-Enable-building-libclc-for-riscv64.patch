From 6159df022fed47a9605c38fb5c9c8a7e7e8ba77e Mon Sep 17 00:00:00 2001
From: Harald van Dijk <harald.vandijk@codeplay.com>
Date: Mon, 29 Jul 2024 16:11:44 +0100
Subject: [PATCH] Enable building libclc for riscv64.

---
 libclc/CMakeLists.txt | 14 +++++++++-----
 1 file changed, 9 insertions(+), 5 deletions(-)

diff --git a/libclc/CMakeLists.txt b/libclc/CMakeLists.txt
index fb2d52bfe5e7..0c47a4101325 100644
--- a/libclc/CMakeLists.txt
+++ b/libclc/CMakeLists.txt
@@ -53,6 +53,10 @@ option( ENABLE_RUNTIME_SUBNORMAL "Enable runtime linking of subnormal support."
 
 set( LIBCLC_NATIVECPU_FLAGS_X86_64 ""
   CACHE STRING "Semicolon-separated list of compiler flags for x86_64 libclc target.")
+set( LIBCLC_NATIVECPU_FLAGS_AARCH64 ""
+  CACHE STRING "Semicolon-separated list of compiler flags for aarch64 libclc target.")
+set( LIBCLC_NATIVECPU_FLAGS_RISCV64 ""
+  CACHE STRING "Semicolon-separated list of compiler flags for riscv64 libclc target.")
 
 if( LIBCLC_STANDALONE_BUILD OR CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR )
   # Out-of-tree configuration
@@ -229,6 +233,7 @@ set( spirv64-mesa3d-_devices none )
 # TODO: Does this need to be set for each possible triple?
 set( x86_64-unknown-linux-gnu_devices none )
 set( aarch64-unknown-linux-gnu_devices none )
+set( riscv64-unknown-linux-gnu_devices none )
 
 # Setup aliases
 set( cedar_aliases palm sumo sumo2 redwood juniper )
@@ -311,7 +316,7 @@ else(LIBCLC_STANDALONE_BUILD)
 endif(LIBCLC_STANDALONE_BUILD)
 file( TO_CMAKE_PATH ${LIBCLC_LIBRARY_OUTPUT_INTDIR}/clc LIBCLC_LIBRARY_OUTPUT_INTDIR )
 
-set(NATIVECPU_SUPPORTED_ARCH "x86_64;aarch64")
+set(NATIVECPU_SUPPORTED_ARCH "x86_64;aarch64;riscv64")
 
 foreach( t ${LIBCLC_TARGETS_TO_BUILD} )
   message( STATUS "libclc target '${t}' is enabled" )
@@ -416,9 +421,8 @@ foreach( t ${LIBCLC_TARGETS_TO_BUILD} )
         list( APPEND build_flags -mcpu=gfx940 -mllvm --amdgpu-oclc-reflect-enable=false )
       elseif( IS_NATIVE_CPU_ARCH )
         list( APPEND build_flags -Xclang -fsycl-is-native-cpu )
-        if( ARCH  STREQUAL x86_64 )
-          list( APPEND build_flags ${LIBCLC_NATIVECPU_FLAGS_X86_64})
-        endif()
+        string( TOUPPER "${ARCH}" ARCH_UPPER_CASE )
+        list( APPEND build_flags ${LIBCLC_NATIVECPU_FLAGS_${ARCH_UPPER_CASE}} )
       endif()
     endif()
 
@@ -479,7 +483,7 @@ foreach( t ${LIBCLC_TARGETS_TO_BUILD} )
       "+__opencl_c_3d_image_writes,"
       "+__opencl_c_images,"
       "+cl_khr_3d_image_writes")
-    if( ARCH STREQUAL "aarch64")
+    if( IS_NATIVE_CPU_ARCH )
       string( APPEND CL_3_0_EXTENSIONS ",+cl_clang_storage_class_specifiers,+__opencl_c_fp64,+cl_khr_int64_base_atomics,+cl_khr_int64_extended_atomics" )
     endif()
     if( supports_generic_addrspace )
-- 
2.34.1

