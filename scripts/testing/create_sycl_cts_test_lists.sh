#!/bin/bash

# Build two files of test lists based on the sycl csv file used in city runner
# and that generated from test_*. These are checked for differences.

# The first is generated by running the tests in the sycl cts csv file with
# '--list-tests -v quiet' and concatentating

# The second file is simple 'test --list-tests -v quiet' for each test binary.

prepend_path=
while [[ $# -ne 0 ]]
do
	case $1 in
	--prepend-path)
		prepend_path=${2?}
		shift 2
		continue;;
	--prepend-path=*)
		prepend_path=${1#*=}
		shift
		continue;;
	--)
		shift
		break;;
	*)
		break;;
	esac
done

if [[ $# -ne 4 ]]; 
then
  echo "usage: $0 [--prepend-path <path>] <sycl cts build dir> <sycl cts csv file> <list tests from csv input> <list tests from test_all>"
  exit 1
fi

output_csv_test_list=`realpath $3`
output_test_all_list=`realpath $4`
sycl_cts_file=$(cat $2)

cd $1

temp_file=`tempfile`

while IFS= read -r line; do

  # if line starts with a hash then skip
  if [[ "$line" =~ ^\#.* ]] ; then
    continue
  fi
  # Process the line to work out how to run the test - use csv reader to select test and args to run
  test_to_run=`echo $line | python3 -c 'import sys, csv
for line in csv.reader(sys.stdin): print(line[1])'`
  # Actually run the test, if binary exists, with --list-tests
  binary=$(echo ./bin/$test_to_run | sed 's/\ .*//')
  if [[ -f $binary ]]; then
    if ! eval "$prepend_path ./bin/$test_to_run --list-tests -v quiet" >> $temp_file; then
      echo "Error : Unable to process $line"
      exit 1
    fi
  fi
done <<< $sycl_cts_file

mv $temp_file $output_csv_test_list

for test_to_run in ./bin/test_*; do
  $prepend_path $test_to_run --list-tests -v quiet
done > $output_test_all_list
