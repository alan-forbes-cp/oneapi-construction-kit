; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a OpenCL -b 64 -c Sampled1D %spv_file_s | FileCheck %s
                        OpCapability Kernel
                        OpCapability Addresses
                        OpCapability Sampled1D
                        OpMemoryModel Physical64 OpenCL
                        OpEntryPoint Kernel %image3d "image3d"
                        OpSource OpenCL_C 102000
                        OpName %image "image"

; All types, variables and constants
              %void_t = OpTypeVoid
               %int_t = OpTypeInt 32 0
             %v3int_t = OpTypeVector %int_t 3
        %image3d_t = OpTypeImage %void_t 3D 0 0 0 0 Unknown ReadOnly
     %query_size_fn_t = OpTypeFunction %void_t %image3d_t
               %int_1 = OpConstant %int_t 1

; All functions
             %image3d = OpFunction %void_t None %query_size_fn_t
               %image = OpFunctionParameter %image3d_t
; CHECK: define spir_kernel void @image3d([[IMG_TY:target\("spirv.Image", void, 2, 0, 0, 0, 0, 0, 0\)]] noundef %image)
                   %1 = OpLabel
                   %2 = OpImageQuerySizeLod %v3int_t %image %int_1
; CHECK: [[width_result:%.*]] = call spir_func i32 @_Z15get_image_width11ocl_image3d([[IMG_TY]] %image)
; CHECK: [[v3int_idx_0:%.*]] = insertelement <3 x i32> undef, i32 [[width_result]], i32 0
; CHECK: [[height_result:%.*]] = call spir_func i32 @_Z16get_image_height11ocl_image3d([[IMG_TY]] %image)
; CHECK: [[v3int_idx_1:%.*]] = insertelement <3 x i32> [[v3int_idx_0]], i32 [[height_result]], i32 1
; CHECK: [[depth_result:%.*]] = call spir_func i32 @_Z15get_image_depth11ocl_image3d([[IMG_TY]] %image)
; CHECK: [[v3int_ptr_idx_2:%.*]] = insertelement <3 x i32> [[v3int_idx_1]], i32 [[depth_result]], i32 2
                        OpReturn
; CHECK: ret void
                        OpFunctionEnd
; CHECK: }
