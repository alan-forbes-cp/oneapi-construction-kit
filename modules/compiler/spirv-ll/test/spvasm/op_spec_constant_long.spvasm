; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a OpenCL -b 64 -c Float64 -c Int64 %spv_file_s | FileCheck %s
; CHECK: ; ModuleID = '{{.*}}'
                      OpCapability Kernel
                      OpCapability Float64
                      OpCapability Int64
                      OpMemoryModel Logical OpenCL
                      OpEntryPoint Kernel %main "main"
                      OpExecutionMode %main LocalSize 1 1 1
                      OpSource GLSL 450
                      OpName %main "main"
                      OpName %a_block "a_block"
                      OpMemberName %a_block 0 "test_out"
                      OpName %_ ""
                      OpDecorate %11 SpecId 0
              %void = OpTypeVoid
              %long = OpTypeInt 64 1
          %idx_type = OpTypeInt 32 0
           %a_block = OpTypeStruct %long
; CHECK: [[uniforms:%.*]] = type { i64 }
 %ptr_CrossWorkgroup_block = OpTypePointer CrossWorkgroup %a_block
                 %3 = OpTypeFunction %void %ptr_CrossWorkgroup_block
                %10 = OpConstant %idx_type 0
                %11 = OpSpecConstant %long 42000000000  ; testing this
  %ptr_CrossWorkgroup_long = OpTypePointer CrossWorkgroup %long
              %main = OpFunction %void None %3
                 %_ = OpFunctionParameter %ptr_CrossWorkgroup_block
; CHECK: define spir_kernel void @main(ptr addrspace(1) noundef %0)
                 %5 = OpLabel
                %13 = OpAccessChain %ptr_CrossWorkgroup_long %_ %10
; CHECK: [[uniformLongPtr:%.*]] = getelementptr [[uniforms]], ptr addrspace(1) {{%.*}}, i32 0, i32 0
                      OpStore %13 %11
; CHECK: store i64 42000000000, ptr addrspace(1) [[uniformLongPtr]]
                      OpReturn
; CHECK: ret void
                      OpFunctionEnd
; CHECK: }
