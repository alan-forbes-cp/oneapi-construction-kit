; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a OpenCL -b 64 %spv_file_s | FileCheck %s
               OpCapability Kernel
               OpCapability Addresses
               OpCapability Int64
          %1 = OpExtInstImport "OpenCL.std"
               OpMemoryModel Physical64 OpenCL
               OpEntryPoint Kernel %main "main" %global_id

               OpDecorate %global_id BuiltIn GlobalInvocationId

       %void = OpTypeVoid
          %3 = OpTypeFunction %void
       %uint_t = OpTypeInt 32 0
       %size_t = OpTypeInt 64 0
    %v3uint = OpTypeVector %size_t 3
 %_ptr_Function_uint = OpTypePointer Function %size_t
  %_ptr_Input_v3uint = OpTypePointer Input %v3uint
    %_ptr_Input_uint = OpTypePointer Input %size_t
%global_id = OpVariable %_ptr_Input_v3uint Input
     %uint_0 = OpConstant %uint_t 0
     %size_t_4 = OpConstant %size_t 4
       %main = OpFunction %void None %3
          %5 = OpLabel
         %id = OpLoad %v3uint %global_id
; CHECK: call spir_func i64 @_Z13get_global_idj(i32 0)
         %45 = OpVectorExtractDynamic %size_t %id %uint_0
         %14 = OpIAdd %size_t %45 %size_t_4
               OpReturn
               OpFunctionEnd

; CHECK: declare spir_func i64 @_Z13get_global_idj(i32) [[ATTRS:#[0-9]+]]

; CHECK: attributes [[ATTRS]] = { nounwind memory(read) }
