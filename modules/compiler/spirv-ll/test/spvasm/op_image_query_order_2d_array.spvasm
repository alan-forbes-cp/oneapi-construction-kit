; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a OpenCL -b 64 -c Sampled1D %spv_file_s | FileCheck %s
                        OpCapability Kernel
                        OpCapability Addresses
                        OpCapability Sampled1D
                        OpMemoryModel Physical64 OpenCL
                        OpEntryPoint Kernel %image2d_array "image2d_array"
                        OpSource OpenCL_C 102000
                        OpName %in_image "in_image"

; All types, variables and constants
              %void_t = OpTypeVoid
               %int_t = OpTypeInt 32 0
  %image2d_array_t = OpTypeImage %void_t 2D 0 1 0 0 Unknown ReadOnly
   %query_format_fn_t = OpTypeFunction %void_t %image2d_array_t

; All functions
       %image2d_array = OpFunction %void_t None %query_format_fn_t
            %in_image = OpFunctionParameter %image2d_array_t
; CHECK: define spir_kernel void @image2d_array([[TY:target\("spirv.Image", void, 1, 0, 1, 0, 0, 0, 0\)]] noundef %in_image)
                   %1 = OpLabel
                   %2 = OpImageQueryOrder %int_t %in_image
; CHECK: = call spir_func i32 @_Z23get_image_channel_order16ocl_image2darray([[TY]] %in_image)
                        OpReturn
; CHECK: ret void
                        OpFunctionEnd
; CHECK: }
