; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a OpenCL -b 64 -c Addresses %spv_file_s | FileCheck %s
               OpCapability Addresses
               OpCapability Kernel
               OpCapability Int64
               OpCapability Int8
          %1 = OpExtInstImport "OpenCL.std"
               OpMemoryModel Physical64 OpenCL
               OpEntryPoint Kernel %2 "async_copy"
               OpSource OpenCL_C 102000
               OpName %in "in"
               OpName %out "out"
               OpName %size "size"
       %uint = OpTypeInt 32 0
      %ulong = OpTypeInt 64 0
      %float = OpTypeFloat 32
       %void = OpTypeVoid
      %Event = OpTypeEvent
%_ptr_CrossWorkgroup_float = OpTypePointer CrossWorkgroup %float
%_ptr_Workgroup_float = OpTypePointer Workgroup %float
%_ptr_Function_Event = OpTypePointer Function %Event
         %13 = OpTypeFunction %void %_ptr_CrossWorkgroup_float %_ptr_Workgroup_float %ulong
     %uint_2 = OpConstant %uint 2
     %uint_1 = OpConstant %uint 1
    %ulong_1 = OpConstant %ulong 1
 %event_null = OpConstantNull %Event
          %2 = OpFunction %void None %13
         %in = OpFunctionParameter %_ptr_CrossWorkgroup_float
        %out = OpFunctionParameter %_ptr_Workgroup_float
       %size = OpFunctionParameter %ulong
         %19 = OpLabel
         %20 = OpVariable %_ptr_Function_Event Function
         %21 = OpGroupAsyncCopy %Event %uint_2 %in %out %size %ulong_1 %event_null
               OpStore %20 %21
               OpGroupWaitEvents %uint_2 %uint_1 %20
               OpReturn
               OpFunctionEnd
; CHECK: ; ModuleID = '{{.*}}'
; CHECK: define spir_kernel void @async_copy(ptr addrspace(1) noundef %in, ptr addrspace(3) noundef %out, i64 noundef %size)
; CHECK: [[EVENT_VAR:%.*]] = alloca [[EVENT_TY:target\("spirv.Event"\)]]
; CHECK: [[EVENT:%.*]] = call spir_func [[EVENT_TY]] @_Z29async_work_group_strided_copyPU3AS1fPU3AS3Kfmm9ocl_event(ptr addrspace(1) %in, ptr addrspace(3) %out, i64 %size, i64 1, [[EVENT_TY]] zeroinitializer)
; CHECK: store [[EVENT_TY]] [[EVENT]], ptr [[EVENT_VAR]]
; CHECK: call spir_func void @_Z17wait_group_eventsiP9ocl_event(i32 1, ptr [[EVENT_VAR]])
; CHECK: ret void
; CHECK: declare spir_func [[EVENT_TY]] @_Z29async_work_group_strided_copyPU3AS1fPU3AS3Kfmm9ocl_event(ptr addrspace(1), ptr addrspace(3), i64, i64, [[EVENT_TY]])
; CHECK: declare spir_func void @_Z17wait_group_eventsiP9ocl_event(i32, ptr)
