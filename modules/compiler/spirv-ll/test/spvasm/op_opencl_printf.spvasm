; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a OpenCL -b 32 -c Addresses %spv_file_s | FileCheck %s
               OpCapability Addresses
               OpCapability Kernel
               OpCapability Int8
          %1 = OpExtInstImport "OpenCL.std"
               OpMemoryModel Physical32 OpenCL
               OpEntryPoint Kernel %23 "foo"
               OpSource OpenCL_C 102000
               OpName %_str ".str"
               OpName %entry "entry"
               OpName %call "call"
               OpDecorate %_str Constant
               OpDecorate %_str Alignment 1
      %uchar = OpTypeInt 8 0
       %uint = OpTypeInt 32 0
   %uchar_97 = OpConstant %uchar 97
  %uchar_110 = OpConstant %uchar 110
  %uchar_115 = OpConstant %uchar 115
  %uchar_119 = OpConstant %uchar 119
  %uchar_101 = OpConstant %uchar 101
  %uchar_114 = OpConstant %uchar 114
   %uchar_58 = OpConstant %uchar 58
   %uchar_32 = OpConstant %uchar 32
   %uchar_37 = OpConstant %uchar 37
  %uchar_100 = OpConstant %uchar 100
   %uchar_10 = OpConstant %uchar 10
    %uchar_0 = OpConstant %uchar 0
    %uint_12 = OpConstant %uint 12
     %uint_0 = OpConstant %uint 0
    %uint_42 = OpConstant %uint 42
%_arr_uchar_uint_12 = OpTypeArray %uchar %uint_12
%_ptr_UniformConstant__arr_uchar_uint_12 = OpTypePointer UniformConstant %_arr_uchar_uint_12
       %void = OpTypeVoid
         %22 = OpTypeFunction %void
%_ptr_UniformConstant_uchar = OpTypePointer UniformConstant %uchar
         %18 = OpConstantComposite %_arr_uchar_uint_12 %uchar_97 %uchar_110 %uchar_115 %uchar_119 %uchar_101 %uchar_114 %uchar_58 %uchar_32 %uchar_37 %uchar_100 %uchar_10 %uchar_0
       %_str = OpVariable %_ptr_UniformConstant__arr_uchar_uint_12 UniformConstant %18
; CHECK: @.str = private unnamed_addr addrspace(2) constant [12 x i8] c"answer: %d\0A\00", align 1
         %23 = OpFunction %void None %22
      %entry = OpLabel
         %27 = OpInBoundsPtrAccessChain %_ptr_UniformConstant_uchar %_str %uint_0 %uint_0
; CHECK: %0 = getelementptr inbounds [12 x i8], ptr addrspace(2) @.str, i32 0, i32 0
       %call = OpExtInst %uint %1 printf %27 %uint_42
; CHECK: %call = tail call spir_func i32 (ptr addrspace(2), ...) @printf(ptr addrspace(2) %0, i32 42)
               OpReturn
               OpFunctionEnd
; CHECK: declare extern_weak spir_func i32 @printf(ptr addrspace(2)
; CHECK-DAG: {{nocapture|captures\(none\)}}
; CHECK-DAG: readonly
; CHECK-SAME: , ...) local_unnamed_addr
