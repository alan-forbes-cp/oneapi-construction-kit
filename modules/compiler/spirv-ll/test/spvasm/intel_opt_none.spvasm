; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; REQUIRES: spirv-as-v2021.3+
; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a OpenCL -b 64 -e SPV_INTEL_optnone %spv_file_s | FileCheck %s
               OpCapability Addresses
               OpCapability Kernel
               OpCapability OptNoneINTEL
               OpExtension "SPV_INTEL_optnone"
          %1 = OpExtInstImport "OpenCL.std"
               OpMemoryModel Physical64 OpenCL
               OpEntryPoint Kernel %4 "foo"
          %6 = OpString "kernel_arg_type.foo."
               OpSource OpenCL_C 102000
               OpName %entry "entry"
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
          %4 = OpFunction %void OptNoneINTEL %3
      %entry = OpLabel
               OpReturn
               OpFunctionEnd
; CHECK: define private spir_func void @foo{{.*}}() [[ATTRS:#[0-9]]]
; CHECK: attributes [[ATTRS]] = { noinline nounwind optnone }
