; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a OpenCL -b 64 -c ImageBasic -c Sampled1D %spv_file_s | FileCheck %s
                OpCapability Kernel
                OpCapability Addresses
                OpCapability ImageBasic
                OpCapability Sampled1D
                OpMemoryModel Physical64 OpenCL
                OpEntryPoint Kernel %image1d "image1d"
                OpSource OpenCL_C 102000
                OpName %image "image"
      %void_t = OpTypeVoid
      %uint_t = OpTypeInt 32 0
     %float_t = OpTypeFloat 32
     %uint4_t = OpTypeVector %uint_t 4
    %float4_t = OpTypeVector %float_t 4
   %image1d_t = OpTypeImage %void_t 1D 0 0 0 0 Unknown ReadOnly
       %foo_t = OpTypeFunction %void_t %image1d_t
      %uint_0 = OpConstant %uint_t 0
     %image1d = OpFunction %void_t None %foo_t
       %image = OpFunctionParameter %image1d_t
; CHECK: define spir_kernel void @image1d([[TY:target\("spirv.Image", void, 0, 0, 0, 0, 0, 0, 0\)]] noundef %image)
           %1 = OpLabel
           %3 = OpImageRead %uint4_t %image %uint_0
; CHECK: = call spir_func <4 x i32> @_Z12read_imageui11ocl_image1di([[TY]] %image, i32 0)
           %4 = OpImageRead %float4_t %image %uint_0
; CHECK: = call spir_func <4 x float> @_Z11read_imagef11ocl_image1di([[TY]] %image, i32 0)
                OpReturn
; CHECK: ret void
                OpFunctionEnd
; CHECK: }
