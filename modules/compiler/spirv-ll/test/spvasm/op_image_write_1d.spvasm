; Copyright (C) Codeplay Software Limited
;
; Licensed under the Apache License, Version 2.0 (the "License") with LLVM
; Exceptions; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
; License for the specific language governing permissions and limitations
; under the License.
;
; SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

; RUN: %if online-spirv-as %{ spirv-as --target-env %spv_tgt_env -o %spv_file_s %s %}
; RUN: %if online-spirv-as %{ spirv-val %spv_file_s %}
; RUN: spirv-ll-tool -a OpenCL -b 64 -c ImageBasic -c Sampled1D -c StorageImageWriteWithoutFormat %spv_file_s | FileCheck %s
                            OpCapability Kernel
                            OpCapability Addresses
                            OpCapability ImageBasic
                            OpCapability Sampled1D
                            OpCapability StorageImageWriteWithoutFormat
                            OpMemoryModel Physical64 OpenCL
                            OpEntryPoint Kernel %test "test"
                            OpName %image "image"

; All types, variables and constants                            
                  %void_t = OpTypeVoid
                  %uint_t = OpTypeInt 32 0
                 %float_t = OpTypeFloat 32
                %float4_t = OpTypeVector %float_t 4
                 %uint4_t = OpTypeVector %uint_t 4
            %image1d_t = OpTypeImage %void_t 1D 0 0 0 0 Unknown WriteOnly
                %testfnty = OpTypeFunction %void_t %image1d_t
                 %float_1 = OpConstant %float_t 1
                  %uint_1 = OpConstant %uint_t 1
                   %int_1 = OpConstant %uint_t 1
                   %int_0 = OpConstant %uint_t 0
            %float4_color = OpConstantComposite %float4_t %float_1 %float_1 %float_1 %float_1
             %uint4_color = OpConstantComposite %uint4_t %uint_1 %uint_1 %uint_1 %uint_1

; All functions              
                    %test = OpFunction %void_t None %testfnty
                   %image = OpFunctionParameter %image1d_t
; CHECK: define spir_kernel void @test([[TY:target\("spirv.Image", void, 0, 0, 0, 0, 0, 0, 0\)]] noundef %image)
                       %1 = OpLabel
                            OpImageWrite %image %int_0 %float4_color
; CHECK: call spir_func void @_Z12write_imagef11ocl_image1diDv4_f([[TY]] %image, i32 0, <4 x float> {{<(float 1.000000e\+00(, )?)+>|splat \(float 1.000000e\+00\)}})
                            OpImageWrite %image %int_0 %uint4_color
; CHECK: call spir_func void @_Z13write_imageui11ocl_image1diDv4_j([[TY]] %image, i32 0, <4 x i32> {{<(i32 1(, )?)+>|splat \(i32 1\)}})
                            OpReturn
; CHECK: ret void
                            OpFunctionEnd
; CHECK: }
