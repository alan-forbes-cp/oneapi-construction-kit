# Copyright (C) Codeplay Software Limited
#
# Licensed under the Apache License, Version 2.0 (the "License") with LLVM
# Exceptions; you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

add_custom_target(abacus_generate)

set(generate_autogen
  "THIS FILE IS AUTOGENERATED AS PART OF ABACUS CMAKE! DO NOT EDIT!")

# Used throughout builtins. When abacus_generate is a dependency to a custom
# command, then the list of files is also required.
set(ABACUS_GENERATED_FILES "")

function(generate target ...)
  set(GENERATE_OUTPUT_DIR ${CMAKE_BINARY_DIR}/include/abacus)
  set(GENERATE_OUTPUT_FILE ${GENERATE_OUTPUT_DIR}/${target}.h)

  set(GENERATE_CMAKE_FILE
    ${CMAKE_CURRENT_SOURCE_DIR}/${target}/generate.cmakescript)

  list(APPEND GENERATE_DEPENDENCIES
    ${GENERATE_CMAKE_FILE}
    ${CMAKE_CURRENT_SOURCE_DIR}/${target}/${target}.in)
  foreach(arg ${ARGN})
    list(APPEND GENERATE_DEPENDENCIES
      ${CMAKE_CURRENT_SOURCE_DIR}/${target}/${arg}.in)
  endforeach()

  if(TARGET ClangTools::clang-format)
    add_custom_command(OUTPUT "${GENERATE_OUTPUT_FILE}"
      COMMAND ${CMAKE_COMMAND}
        -DGENERATE_OUTPUT_DIR:PATH="${GENERATE_OUTPUT_DIR}"
        -DGENERATE_OUTPUT_FILE:FILEPATH="${GENERATE_OUTPUT_FILE}"
        -P "${GENERATE_CMAKE_FILE}"
      COMMAND ClangTools::clang-format -i -style=file ${GENERATE_OUTPUT_FILE}
      WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/${target}"
      DEPENDS ${GENERATE_DEPENDENCIES} ClangTools::clang-format)
  else()
    add_custom_command(OUTPUT "${GENERATE_OUTPUT_FILE}"
      COMMAND ${CMAKE_COMMAND}
        -DGENERATE_OUTPUT_DIR:PATH="${GENERATE_OUTPUT_DIR}"
        -DGENERATE_OUTPUT_FILE:FILEPATH="${GENERATE_OUTPUT_FILE}"
        -P "${GENERATE_CMAKE_FILE}"
      WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/${target}"
      DEPENDS ${GENERATE_DEPENDENCIES})
  endif()

  set(ABACUS_GENERATED_FILES
      "${ABACUS_GENERATED_FILES};${GENERATE_OUTPUT_FILE}" PARENT_SCOPE)

  add_custom_target(${target} DEPENDS ${GENERATE_OUTPUT_FILE})
  add_dependencies(abacus_generate ${target})
endfunction()

generate(abacus_cast
  abacus_cast as main)
generate(abacus_common
  abacus_common main some_params_scalar)
generate(abacus_config
  abacus_config)
generate(abacus_detail_cast
  abacus_detail_cast)
generate(abacus_detail_common
  abacus_detail_common)
generate(abacus_detail_geometric
  abacus_detail_geometric)
generate(abacus_detail_integer
  abacus_detail_integer)
generate(abacus_detail_relational
  abacus_detail_relational)
generate(abacus_geometric
  abacus_geometric cross main)
generate(abacus_integer
  abacus_integer abs_and_abs_diff int24 main some_params_scalar upsample)
generate(abacus_math
  abacus_math main only_float some_scalar)
generate(abacus_memory
  abacus_memory vload vstore)
generate(abacus_misc
  abacus_misc main)
generate(abacus_relational
  abacus_relational main select)
generate(abacus_type_traits
  abacus_type_traits main shape)

list(REMOVE_DUPLICATES ABACUS_GENERATED_FILES)
set(ABACUS_GENERATED_FILES "${ABACUS_GENERATED_FILES}" CACHE INTERNAL
    "List of auto-generated abacus headers")
